@page "/home"
@using Barbershop.Model.Entity
@using Components.Layout
@using Microsoft.EntityFrameworkCore
@rendermode InteractiveServer
@inject IAuthorizationService authorization
@inject NavigationManager navigation

@if (AuthorizedUser?.Role == RoleTypes.Client)
{
    <HomeClient AuthorizedUser="@AuthorizedUser"></HomeClient>
}
@if (AuthorizedUser?.Role == RoleTypes.Master)
{
    <HomeMaster AuthorizedUser="@AuthorizedUser"></HomeMaster>
}
@code
{
    User? AuthorizedUser;
    Master? masterData;
    Client? clientData;
    bool visible = false;
    protected override async Task OnInitializedAsync()
    {

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {

            AuthorizedUser = await authorization.GetAuthorizedUser();
            await FetchRoleData();
            StateHasChanged();
        }
    }

    async Task FetchRoleData()
    {
        if (AuthorizedUser?.Role == RoleTypes.Master)
        {
            using (var db = new DatabaseContext())
            {
                masterData = db.Masters.Where(master => master.User.Id == AuthorizedUser.Id).SingleOrDefault();
            }
        }
        else if (AuthorizedUser?.Role == RoleTypes.Client)
        {

        }
    }
    
}